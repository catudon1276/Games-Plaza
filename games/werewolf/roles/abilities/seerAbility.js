// Âç†„ÅÑÂ∏´„ÅÆËÉΩÂäõÂá¶ÁêÜ
class SeerAbility {
  constructor(game) {
    this.game = game;
    this.rolesMeta = require('../meta').rolesMeta;
  }

  // Âç†„ÅÑËÉΩÂäõÂÆüË°å
  execute(seerId, targetId) {
    const seer = this.game.getPlayer(seerId);
    const target = this.game.getPlayer(targetId);

    if (!seer || !target) {
      return {
        success: false,
        message: 'ÁÑ°Âäπ„Å™„Éó„É¨„Ç§„É§„Éº„Åß„Åô„ÄÇ'
      };
    }

    if (!target.isAlive) {
      return {
        success: false,
        message: 'Ê≠ª‰∫°„Åó„Åü„Éó„É¨„Ç§„É§„Éº„ÅØÂç†„Åà„Åæ„Åõ„Çì„ÄÇ'
      };
    }

    if (seerId === targetId) {
      return {
        success: false,
        message: 'Ëá™ÂàÜËá™Ë∫´„ÅØÂç†„Åà„Åæ„Åõ„Çì„ÄÇ'
      };
    }

    // Âç†„ÅÑÁµêÊûú„ÇíÂèñÂæó
    const targetRoleMeta = this.rolesMeta[target.role];
    const result = targetRoleMeta.reveal.seenBySeer; // "white" or "black"

    // ÁµêÊûú„ÉÜ„Ç≠„Çπ„ÉàÁîüÊàê
    const resultText = result === 'white' ? 'Êùë‰∫∫Èô£Âñ∂' : '‰∫∫ÁãºÈô£Âñ∂';
    const resultEmoji = result === 'white' ? '‚ö™' : '‚ö´';

    return {
      success: true,
      result: result,
      message: `üîÆ Âç†„ÅÑÁµêÊûú\n${target.nickname}„ÅØ„Äå${resultEmoji} ${resultText}„Äç„Åß„Åô„ÄÇ`,
      targetId: targetId,
      targetName: target.nickname,
      seerId: seerId,
      seerName: seer.nickname
    };
  }

  // Âç†„ÅÑÂèØËÉΩÂØæË±°„ÅÆ„É™„Çπ„ÉàÂèñÂæó
  getValidTargets(seerId) {
    return this.game.players.filter(player => 
      player.isAlive && player.id !== seerId
    ).map(player => ({
      id: player.id,
      name: player.nickname
    }));
  }

  // Âç†„ÅÑÂ±•Ê≠¥„ÅÆË®òÈå≤
  recordAction(seerId, targetId, result) {
    if (!this.game.seerHistory) {
      this.game.seerHistory = [];
    }

    this.game.seerHistory.push({
      timestamp: new Date(),
      seerId: seerId,
      targetId: targetId,
      result: result,
      dayCount: this.game.phaseManager.dayCount
    });
  }
}

module.exports = SeerAbility;
